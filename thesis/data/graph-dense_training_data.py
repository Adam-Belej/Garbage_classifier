#!/usr/bin/env python3

import matplotlib.pyplot as plt

loss = [13.5518, 1.7911,  1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986]
val_loss = [13.982, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986, 1.0986]
accuracy = [0.1195, 0.5223, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516, 0.5516]
val_accuracy = [0.1321, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403, 0.5403]

epochs = range(1, len(loss) + 1)

plt.plot(epochs, loss,'r', label='Training loss')
plt.plot(epochs, val_loss, 'b', label='Validation loss')
plt.title('Training and validation loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.savefig('graph-dense_training_data.png')
plt.show()

